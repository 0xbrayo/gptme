name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

jobs:
  build:
    name: Test ${{ matrix.os }} with `${{ matrix.extras }}` on ${{ matrix.model }}
    runs-on: ${{ matrix.os }}
    env:
      RELEASE: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version: ['3.10']
        extras: ['-E all']
        model: ['openai', 'anthropic']
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Install apt dependencies
      run: sudo apt install universal-ctags pandoc tmux
    - name: Install poetry
      run: |
        pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
        cache: 'poetry'

    - name: Install dependencies
      run: |
        make build
        poetry install ${{ matrix.extras }}

    - name: Install playwright
      if: contains(matrix.extras, 'browser') || contains(matrix.extras, 'all')
      run: poetry run playwright install chromium

    # old comment: OpenAI sometimes randomly aborts connections
    - name: Run tests
      uses: nick-fields/retry@v2
      env:
        TERM: xterm
        MODEL: ${{ matrix.model }}
      with:
        timeout_minutes: 5
        max_attempts: 1  # favor pytest retries (mark with flaky)
        retry_wait_seconds: 10
        command: make test SLOW=true

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        MODEL: ${{ matrix.model }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: MODEL
        flags: ${{ matrix.model }}

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker
    - name: Build Docker image (base)
      uses: docker/build-push-action@v3
      with:
        tags: gptme:latest
        file: ./Dockerfile
        context: .
        push: false
    - name: Build Docker image (eval)
      uses: docker/build-push-action@v3
      with:
        tags: gptme-eval:latest
        file: ./Dockerfile.eval
        context: .
        push: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install dependencies
      run: |
        make build
        poetry install
    - name: Check for lint
      run: |
        make lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install dependencies
      run: |
        make build
        poetry install
    - name: Typecheck
      run: |
        make typecheck
